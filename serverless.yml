service: parking-ticket-system

frameworkVersion: '3'

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  deploymentMethod: direct
  environment:
    DYNAMODB_TABLE: ${env:DYNAMODB_TABLE, 'parking-api-${self:provider.stage}'}
  # IAM Role Statements for DynamoDB access
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
  deploymentBucket:
    name: parking-ticket-system-bucket

functions:
  createParking:
    handler: src/functions/create_parking_ticket.handler
    events:
      - http:
          path: parkings
          method: post
          cors: true

custom:
  logRetentionInDays: 30
  prune:
    automatic: true
    number: 3


plugins:
  - serverless-prune-plugin
  - serverless-offline
  - serverless-iam-roles-per-function